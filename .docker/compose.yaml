services:
  main-service:
    container_name: main_service
    image: ${REGISTRY}/rt-main-service:latest
    restart: always
    networks:
      - retrade-network
    environment:
      GRPC_PORT: 9080
      REDIS_HOST: retrade-redis
      REDIS_PORT: 6379
      DB_HOST: retrade-database
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      RABBITMQ_HOST: retrade-rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      CONTEXT_PATH: /
      PORT: 8080
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URL: ${GOOGLE_REDIRECT_URL}
      GOOGLE_USERPROFILE_ENDPOINT: ${GOOGLE_USERPROFILE_ENDPOINT}
      JWT_ACCESS_KEY: ${JWT_ACCESS_KEY}
      JWT_REFRESH_KEY: ${JWT_REFRESH_KEY}
      JWT_2FA_KEY: ${JWT_2FA_KEY}
      JWT_ACCESS_EX: ${JWT_ACCESS_EX:-3000}
      JWT_REFRESH_EX: ${JWT_REFRESH_EX:-30000}
      JWT_2FA_EX: ${JWT_2FA_EX:-3000}
      ORIGIN_ALLOWS: ${ORIGIN_ALLOWS}
      BASE_HOST: ${BASE_HOST}
      FRONTEND_URL: ${FRONTEND_URL}
      SWAGGER_CONTEXT_PATH: /api/main/v1
      FORGOT_PASSWORD_TIMEOUT: 10
      FORGOT_PASSWORD_CALLBACK: ${FORGOT_PASSWORD_CALLBACK}
      VOUCHER_SERVICE_GRPC_HOST: voucher-service
      VOUCHER_SERVICE_GRPC_PORT: 9080
      ELASTICSEARCH_URL: http://retrade-elasticsearch:9200
      ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME:-}
      ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD:-}
      TZ: Asia/Ho_Chi_Minh
      AES_KEY: ${AES_KEY}
      MINIO_URL: http://retrade-minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}

    profiles:
      - backend
      - prod
      - main
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=retrade-network"
      - "traefik.constraint-label=retrade-service"
      - "traefik.http.routers.main-service.rule=PathPrefix(`/api/main/v1/`)"
      - "traefik.http.middlewares.strip-main-prefix.stripprefix.prefixes=/api/main/v1"
      - "traefik.http.routers.main-service.middlewares=strip-main-prefix"
      - "traefik.http.routers.main-service.entrypoints=web"
      - "traefik.http.services.main-service.loadbalancer.server.port=8080"

  feedback-notification-service:
    container_name: feedback_notification_service
    image: ${REGISTRY}/rt-feedback-notification-service:latest
    restart: always
    networks:
      - retrade-network
    environment:
      GRPC_PORT: 9080
      REDIS_HOST: retrade-redis
      REDIS_PORT: 6379
      DB_HOST: retrade-database
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      RABBITMQ_HOST: retrade-rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      CONTEXT_PATH: /
      ORIGIN_ALLOWS: ${ORIGIN_ALLOWS}
      BASE_HOST: ${BASE_HOST}
      FRONTEND_URL: ${FRONTEND_URL}
      SWAGGER_CONTEXT_PATH: /api/feedback-notification/v1
      PORT: 8080
      TZ: Asia/Ho_Chi_Minh
    profiles:
      - backend
      - prod
      - feedback-notification
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.feedback-service.rule=PathPrefix(`/api/feedback-notification/v1/`)"
      - "traefik.http.routers.feedback-service.entrypoints=web"
      - "traefik.http.middlewares.strip-feedback-notification-prefix.stripprefix.prefixes=/api/feedback-notification/v1"
      - "traefik.http.routers.feedback-service.middlewares=strip-feedback-notification-prefix"
      - "traefik.docker.network=retrade-network"
      - "traefik.constraint-label=retrade-service"
      - "traefik.http.services.feedback-service.loadbalancer.server.port=8080"

  storage-service:
    container_name: storage_service
    image: ${REGISTRY}/rt-storage-service:latest
    restart: always
    networks:
      - retrade-network
    environment:
      GRPC_PORT: 9080
      REDIS_HOST: retrade-redis
      REDIS_PORT: 6379
      DB_HOST: retrade-database
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      RABBITMQ_HOST: retrade-rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      CONTEXT_PATH: /
      PORT: 8080
      ORIGIN_ALLOWS: ${ORIGIN_ALLOWS}
      BASE_HOST: ${BASE_HOST}
      FRONTEND_URL: ${FRONTEND_URL}
      SWAGGER_CONTEXT_PATH: /api/storage/v1
      MAIN_SERVICE_GRPC_HOST: main-service
      MAIN_SERVICE_GRPC_PORT: 9080
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      AWS_ENDPOINT: ${AWS_ENDPOINT}
      AWS_BUCKET: ${AWS_BUCKET}
      TZ: Asia/Ho_Chi_Minh
    profiles:
      - backend
      - prod
      - feedback-notification
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.storage-service.rule=PathPrefix(`/api/storage/v1/`)"
      - "traefik.http.middlewares.strip-storage-prefix.stripprefix.prefixes=/api/storage/v1"
      - "traefik.http.routers.storage-service.middlewares=strip-storage-prefix"
      - "traefik.http.routers.storage-service.entrypoints=web"
      - "traefik.docker.network=retrade-network"
      - "traefik.constraint-label=retrade-service"
      - "traefik.http.services.storage-service.loadbalancer.server.port=8080"

  voucher-service:
    container_name: voucher_service
    image: ${REGISTRY}/rt-voucher-service:latest
    restart: always
    networks:
      - retrade-network
    environment:
      GRPC_PORT: 9080
      REDIS_HOST: retrade-redis
      REDIS_PORT: 6379
      DB_HOST: retrade-database
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      RABBITMQ_HOST: retrade-rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      CONTEXT_PATH: /
      PORT: 8080
      ORIGIN_ALLOWS: ${ORIGIN_ALLOWS}
      BASE_HOST: ${BASE_HOST}
      FRONTEND_URL: ${FRONTEND_URL}
      SWAGGER_CONTEXT_PATH: /api/voucher/v1
      MAIN_SERVICE_GRPC_HOST: main-service
      MAIN_SERVICE_GRPC_PORT: 9080
      PAYOS_CLIENT_ID: ${PAYOS_CLIENT_ID}
      PAYOS_API_KEY: ${PAYOS_API_KEY}
      PAYOS_CHECKSUM_KEY: ${PAYOS_CHECKSUM_KEY}
      VNP_PAYURL: ${VNP_PAYURL}
      VNP_TMN_CODE: ${VNP_TMN_CODE}
      VNP_HASH_SECRET: ${VNP_HASH_SECRET}
      VNP_API_URL: ${VNP_API_URL}
      PAYMENT_CALLBACK: ${PAYMENT_CALLBACK}
      TZ: Asia/Ho_Chi_Minh
    profiles:
      - backend
      - prod
      - voucher
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.voucher-service.rule=PathPrefix(`/api/voucher/v1/`)"
      - "traefik.http.middlewares.strip-voucher-prefix.stripprefix.prefixes=/api/voucher/v1"
      - "traefik.http.routers.voucher-service.middlewares=strip-voucher-prefix"
      - "traefik.http.routers.voucher-service.entrypoints=web"
      - "traefik.docker.network=retrade-network"
      - "traefik.constraint-label=retrade-service"
      - "traefik.http.services.voucher-service.loadbalancer.server.port=8080"

  prover-service:
    container_name: prover_service
    image: ${REGISTRY}/rt-prover-service:latest
    restart: always
    networks:
      - retrade-network
    environment:
      RABBITMQ_HOST: retrade-rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      FPT_BASE_URL: ${FPT_BASE_URL}
      FPT_API_KEY: ${FPT_API_KEY}
      MINIO_URL: http://retrade-minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      AES_KEY: ${AES_KEY}
      TZ: Asia/Ho_Chi_Minh
    profiles:
      - backend
      - prod
      - prover

  api-docs:
    container_name: api_docs
    image: ${REGISTRY}/rt-api-docs:latest
    restart: always
    networks:
      - retrade-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-docs.rule=PathPrefix(`/api/docs`)"
      - "traefik.http.middlewares.strip-api-docs-prefix.stripprefix.prefixes=/api/docs"
      - "traefik.http.routers.api-docs.middlewares=strip-api-docs-prefix"
      - "traefik.http.routers.api-docs.entrypoints=web"
      - "traefik.docker.network=retrade-network"
      - "traefik.constraint-label=retrade-service"
      - "traefik.http.services.api-docs.loadbalancer.server.port=80"
    profiles:
      - backend
      - prod
      - docs
networks:
  retrade-network:
    name: retrade-network
    external: true
