services:
  database-services:
    container_name: database_service
    image: postgres:latest
    restart: always
    networks:
      - rt-local-networks
    profiles:
      - database
      - local
      - storage
  redis-services:
    container_name: redis_service
    image: redis:latest
    restart: always
    networks:
      - rt-local-networks
    profiles:
      - database
      - local
      - storage
  rabbitmq-services:
    container_name: rabbitmq_service
    image: rabbitmq:3-management
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - rt-local-networks
    profiles:
      - database
      - local
      - storage
  main-services:
    container_name: main_service
    image: main-authentication-service:latest
    restart: always
    build:
      context: ..
      dockerfile: services/main/Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.main-service.rule=PathPrefix(`/api/main/v1/`)"
      - "traefik.http.routers.main-service.entrypoints=web"
      - "traefik.http.routers.main-service.tls=true"
      - "traefik.http.services.main-service.loadbalancer.server.port=8080"
    networks:
      - rt-local-networks
    profiles:
      - backend
      - local
      - main
  feedback-notification-services:
    container_name: feedback_notification_service
    image: sea-feedback-notification-service:latest
    restart: always
    build:
      context: ..
      dockerfile: services/feedback-notification/Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.feedback-service.rule=PathPrefix(`/api/feedback-notification/v1/`)"
      - "traefik.http.routers.feedback-service.entrypoints=web"
      - "traefik.http.routers.feedback-service.tls=true"
      - "traefik.http.services.feedback-service.loadbalancer.server.port=8080"
    networks:
      - rt-local-networks
    profiles:
      - backend
      - local
      - feedback-notification

  storage-service:
    container_name: storage_service
    image: rt-storage-service:latest
    restart: always
    networks:
      - rt-prod-networks
    profiles:
      - backend
      - prod
      - storage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.storage-service.rule=PathPrefix(`/api/storage/v1/`)"
      - "traefik.http.routers.storage-service.entrypoints=web"
      - "traefik.http.routers.storage-service.tls=true"
      - "traefik.http.services.storage-service.loadbalancer.server.port=8080"

  voucher-services:
    container_name: voucher_service
    image: voucher-service:latest
    restart: always
    build:
      context: ..
      dockerfile: services/voucher/Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.voucher-service.rule=PathPrefix(`/api/voucher/v1/`)"
      - "traefik.http.routers.voucher-service.entrypoints=web"
      - "traefik.http.routers.voucher-service.tls=true"
      - "traefik.http.services.voucher-service.loadbalancer.server.port=8080"
    networks:
      - rt-local-networks
    profiles:
      - backend
      - local
      - voucher


networks:
  rt-local-networks:
    name: rt-local-networks